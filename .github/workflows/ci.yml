jobs:
  BuildAndTest:
    name: Build and Test with java ${{ matrix.java_version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Use Java ${{ matrix.java_version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java_version }}
    - continue-on-error: true
      name: Build and test Java ${{ matrix.java_version }}
      run: 'mvn -B clean test -PJava${{ matrix.java_version }}

        '
    strategy:
      matrix:
        java_version:
        - '8'
        - '9'
        - '11'
  DeployArtifacts:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' ||
      github.ref == 'refs/heads/umbrella'
    name: Deploy artifacts to Maven Central
    needs:
    - BuildAndTest
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Use Java 8
      uses: actions/setup-java@v1
      with:
        java-version: '8'
    - continue-on-error: true
      name: Deploy artifacts
      uses: samuelmeuli/action-maven-publish@v1
      with:
        gpg_passphrase: ${{ secrets.gpg_passphrase }}
        gpg_private_key: ${{ secrets.gpg_private_key }}
        maven_args: -DskipTests -Dcheckstyle.failOnViolation=true
        nexus_password: ${{ secrets.nexus_password }}
        nexus_username: ${{ secrets.nexus_username }}
    - continue-on-error: true
      id: version
      name: Get Version
      run: echo ::set-output name=version::$(mvn help:evaluate -Dexpression=project.version
        -q -DforceStdout)
    - continue-on-error: true
      env:
        docdir: ./build/docs
      name: Organize documentation files for upload
      run: 'export releasedir=${docdir}/${{ steps.version.outputs.version }} # env
        variables cannot contain other env variables

        mkdir -p ${releasedir}/jdoc

        unzip ./target/sootclasses-trunk-javadoc.jar -d ${releasedir}/jdoc/

        mkdir -p ${releasedir}/options

        cp ./doc/soot_options.html ${releasedir}/options/

        cp ./doc/soot_options.css ${releasedir}/options/

        cp ./doc/index.html ${docdir}/

        '
      shell: bash
    - continue-on-error: true
      name: Deploy JavaDoc to GH pages
      uses: JamesIves/github-pages-deploy-action@4.1.5
      with:
        branch: gh-pages
        clean: false
        folder: build/
  StyleAndLicense:
    name: "Check style\xB4and license conformity"
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Use Java 8
      uses: actions/setup-java@v1
      with:
        java-version: '8'
    - continue-on-error: true
      if: always()
      name: Stylecheck
      run: 'mvn -B clean checkstyle:check -Dcheckstyle.failOnViolation=true

        '
    - continue-on-error: true
      if: always()
      name: Licensecheck
      run: 'mvn -B clean license:check-file-header -Dlicence-check.failOnMissingHeader=true

        '
name: Soot CI
on:
  repository_dispatch:
    types: trigger-ga___ci.yml
